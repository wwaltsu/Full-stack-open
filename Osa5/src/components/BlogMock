import React, { useState } from 'react';
import blogService from '../services/blogs'
import PropTypes from 'prop-types'
const Blog = ({ blog, setBlogs }) => {
const [like, setNewLike] = useState(blog.likes)
 

const ShowMore = () => {
  const [showResults, setShowResults] = React.useState(false)
  const onClick = () => setShowResults(!showResults)
  if(showResults) {
    return(
      <div>
      <input type="submit" value="Hide" onClick={onClick} />
      { showResults ? <Results /> : <Less/> }
    </div>
    )
  }
  
  return (
    <div>
      <input type="submit" value="View" onClick={onClick} />
      { showResults ? <Results /> : <Less/> }
    </div>
  )
}

const Less = () => (
  <div id="expand" className="expanded">
    <p>{blog.title}</p>
  </div>
)

const Results = () => (
  <div id="expand" className="expanded">
    <p>{blog.title}</p>
    <p>{blog.author}</p> 
    <div>{like}{' '}Likes <button onClick={addLike} >Like</button> </div>  
    <p>{blog.url}</p> 
    <p><button onClick={() => handleBlogRemove()}>remove</button>  </p>
  </div>
)
 
 const addLike = async () => {
  try{
    setNewLike(like+1)
    const copyBlog =  { 
      likes: ++blog.likes, 
      title: blog.title, 
      author: blog.author, 
      user: blog.user.id, 
      url: blog.url 
    }
    await blogService.update(blog.id, copyBlog)
    setNewLike(like+1)
  }catch(exception){
    console.log('error')
  }
}

const handleBlogRemove = async () => {
  try {
    if (window.confirm('Are you sure to remove this blog by' + blog.title + ' ' + blog.author)) {
      const response = await blogService.remove(blog.id)
      const updateBlogs = await blogService.getAll()
      setBlogs(updateBlogs)
      console.log(response)
    }
  } catch (error) {
    console.log(error)
  }
}

     
  const blogStyle = {
    paddingTop: 10,
    paddingLeft: 2,
    border: 'solid',
    borderWidth: 1,
    marginBottom: 5
  }

  return (
    
  
  <div style={blogStyle}>
    <ShowMore/>
  
    </div>


)
  }

  Blog.propTypes = {
    blog: PropTypes.object.isRequired,
   
    
   
  }

export default Blog
